---
# Install required dependencies
- name: Install dependencies
  apt:
    name:
      - git
      - gnupg
    state: present
    update_cache: true

# Add Gitea GPG key
- name: Add Gitea GPG key
  get_url:
    url: https://packaging.gitlab.io/gitea/gpg.key
    dest: /etc/apt/trusted.gpg.d/morph027-gitea.asc
    mode: '0644'

# Add Gitea repository
- name: Add Gitea repository
  apt_repository:
    repo: deb https://packaging.gitlab.io/gitea gitea main
    state: present
    filename: morph027-gitea

# Install Gitea packages
- name: Install Gitea packages
  apt:
    name:
      - gitea
      - morph027-keyring
    state: present
    update_cache: true

# Create git user with a valid shell for initial setup
- name: Create git user
  user:
    name: git
    system: true
    shell: /bin/bash
    comment: 'Git Version Control'
    home: /home/git
    createhome: true

# Create required directories for Gitea
- name: Create Gitea directories
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
    recurse: true  # This ensures all subdirectories get proper permissions
  loop:
    - { path: '/var/lib/gitea', owner: 'git', group: 'git', mode: '0750' }
    - { path: '/var/lib/gitea/custom', owner: 'git', group: 'git', mode: '0750' }
    - { path: '/var/lib/gitea/data', owner: 'git', group: 'git', mode: '0750' }
    - { path: '/var/lib/gitea/log', owner: 'git', group: 'git', mode: '0750' }
    - { path: '/etc/gitea', owner: 'root', group: 'git', mode: '0770' }

- name: Import credentials
  import_tasks: credentials.yml

# Copy Gitea configuration file with restricted permissions
- name: Create Gitea config file
  template:
    src: app.ini.j2
    dest: /etc/gitea/app.ini
    owner: root
    group: git
    mode: '0660'  # Requires rw access when starting gitea.service the first time, so it can write the JWT secret

# Copy Gitea service file
- name: Copy Gitea service file
  copy:
    src: gitea.service
    dest: /etc/systemd/system/gitea.service
    owner: root
    group: root
    mode: '0644'

# Reload systemd and start Gitea
- name: Reload systemd daemon
  systemd:
    daemon_reload: true

- name: Enable and start Gitea service
  systemd:
    name: gitea
    state: started
    enabled: true

# Update app.ini permissions after initialization
- name: Update app.ini permissions
  file:
    path: /etc/gitea/app.ini
    mode: '0640'
    owner: root 
    group: git

# Initialize Gitea database
- name: Check if Gitea database is already initialized
  become: true
  become_user: postgres
  community.postgresql.postgresql_query:
    db: giteadb
    query: "SELECT EXISTS (SELECT FROM information_schema.tables WHERE table_name = 'user')"
  register: db_initialized

- name: Initialize Gitea database
  become: true
  become_user: git
  shell: gitea migrate --config /etc/gitea/app.ini
  register: db_init
  changed_when: db_init.rc == 0
  failed_when: db_init.rc != 0 and "already exists" not in db_init.stderr and "already initialized" not in db_init.stderr
  when: not db_initialized.query_result[0].exists
  notify: restart gitea

# Create admin user (only after database is initialized)
- name: Create Gitea admin user
  become: true
  become_user: git
  shell: >
    gitea admin user create 
    --config /etc/gitea/app.ini 
    --username admin 
    --password {{ gitea_admin_password }} 
    --email user@linode.com 
    --admin
  register: admin_user
  changed_when: admin_user.rc == 0
  failed_when: admin_user.rc != 0 and "already exists" not in admin_user.stderr
  # no_log: true
  notify: restart gitea

# Secure git user by removing shell access after setup
- name: Remove shell access from git user
  user:
    name: git
    shell: /bin/false
  when: not ansible_check_mode
