---

#FQDN
- name: FQDN setup
  block:
  - name: setup fqnd as default_dns
    set_fact:
      fqdn: "{{ default_dns }}"
    when: default_dns is defined

  - name: setup fqnd as subdomain.domain
    set_fact:
      fqdn: "{{ subdomain }}.{{ domain }}"
    when: subdomain is defined and domain is defined

#Joplin service/docker setup    

- name: Harbor Service, Docker, Config
  block:

  - name: Download Harbor Release
    block:
    - name: Get Harbor Release URL
      uri:
        url: https://api.github.com/repos/goharbor/harbor/releases/latest
        return_content: yes
      register: github_response

    - name: Extract Download URL
      set_fact:
        download_url: "{{ github_response.json | json_query('assets[].browser_download_url') | select('match', '\\.tgz$') | first }}"

    - name: Download Harbor Release
      get_url:
        url: "{{ download_url }}"
        dest: /root/
    
    - name: Find the Harbor Installer Archive
      find:
        paths: /root/
        patterns: "harbor-offline-installer*.tgz"
      register: harbor_archive

    - name: Extract the Harbor Installer
      unarchive:
        src: "{{ harbor_archive.files[0].path }}"
        dest: /root/

    - name: Copy the harbor.yml file
      template:
        src: harbor.yaml
        dest: /root/harbor/harbor.yml
    
    - name: Run Harbor Install SH
      shell: /root/harbor/install.sh
    
  - name: Config file Setup
    template:
      src: harbor.service
      dest: "/etc/systemd/system/harbor.service"

  - name: Reload systemd daemon
    systemd:
      daemon_reload: yes
  - name: Enable harbor Service
    systemd:
      name: harbor.service
      enabled: yes
  - name: Start harbor Service
    systemd:
      name: harbor.service
      state: started
    
# ssl_certbot
- name: setting up ssl certificate
  import_role:
    name: certbot_ssl
  
