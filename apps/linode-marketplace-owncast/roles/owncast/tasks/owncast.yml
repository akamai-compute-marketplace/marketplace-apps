---
- name: Get latest Owncast release version from GitHub API
  uri:
    url: https://api.github.com/repos/owncast/owncast/releases/latest
    method: GET
    return_content: yes
  register: github_response
  ignore_errors: yes
  # Adding delay and retries to handle potential API rate limits
  retries: 3
  delay: 10

- name: Set Owncast version variables
  set_fact:
    owncast_version: "{{ github_response.json.tag_name | regex_replace('^v', '') if github_response.status == 200 else '0.2.1' }}"
    owncast_download_url: >-
      {% if github_response.status == 200 %}
      {{ (github_response.json.assets | selectattr('name', 'match', 'owncast.*linux-64bit.zip$') | map(attribute='browser_download_url') | list)[0] }}
      {% else %}
      https://github.com/owncast/owncast/releases/download/v0.2.1/owncast-0.2.1-linux-64bit.zip
      {% endif %}

- name: Download Owncast
  get_url:
    url: "{{ owncast_download_url }}"
    dest: "/tmp/owncast.zip"
    mode: '0644'
  register: download_result

- name: Create required Owncast directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: '0755'
  loop:
    - /opt/owncast
    - /opt/owncast/data

- name: Extract Owncast
  unarchive:
    src: "/tmp/owncast.zip"
    dest: "/opt/owncast/"
    remote_src: yes

- name: Ensure correct ownership of all Owncast files
  file:
    path: /opt/owncast
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: '0755'
    recurse: yes

- name: Create Owncast service file
  template:
    src: owncast.service.j2
    dest: /etc/systemd/system/owncast.service
    mode: '0644'

- name: Reset Owncast admin password using CLI
  shell: "timeout 5 ./owncast --adminpassword {{ owncast_admin_password }}"
  args:
    chdir: /opt/owncast
  register: owncast_result
  become: yes
  become_user: "{{ username }}"
  no_log: yes
  failed_when: owncast_result.rc not in [0, 124]

- name: Start and enable Owncast service
  systemd:
    name: owncast
    state: started
    enabled: yes
    daemon_reload: yes