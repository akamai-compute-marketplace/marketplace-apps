---
# certbot
- name: Open firewall for certbot
  ufw:
    rule: allow
    port: 80
    proto: tcp

- name: Get SSL certs via certbot
  import_role:
    name: certbot_ssl
  vars:
    webserver_stack: standalone

- name: Close firewall
  ufw:
    rule: deny
    port: 80
    proto: tcp

- name: Create cert directory for bolt and browser
  file:
    path: "{{ neo4j_ssl_basedir }}/{{ directory }}"
    state: directory
    owner: neo4j
    group: neo4j
    mode: 0755
  loop_control:
    loop_var: directory
  loop:
    - https
    - bolt

- name: Create trusted and revoked cert directories
  file:
    path: "{{ neo4j_ssl_basedir }}/{{ directory.dest }}"
    state: directory
    owner: neo4j
    group: neo4j
    mode: 0755
  loop_control:
    loop_var: directory
  loop:
    - { dest: 'https/trusted' }
    - { dest: 'https/revoked' }
    - { dest: 'bolt/trusted' }
    - { dest: 'bolt/revoked' }

- name: Copy private key and certificate
  copy:
    src: "{{ cert.source }}"
    dest: "{{ cert.destination }}"
    owner: neo4j
    group: neo4j
    mode: "{{ cert.mode }}"
  loop_control:
    loop_var: cert
  loop:
  # https
    - { source: '{{ letsencrypt_cert_path }}/fullchain.pem', destination: '{{ neo4j_ssl_basedir }}/https/public.crt', mode: '0644' }
    - { source: '{{ letsencrypt_cert_path }}/privkey.pem', destination: '{{ neo4j_ssl_basedir }}/https/private.key', mode: '0400' }
    - { source: '{{ letsencrypt_cert_path }}/fullchain.pem', destination: '{{ neo4j_ssl_basedir }}/https/trusted/public.crt', mode: '0644' }
  # bolt
    - { source: '{{ letsencrypt_cert_path }}/fullchain.pem', destination: '{{ neo4j_ssl_basedir }}/bolt/public.crt', mode: '0644' }
    - { source: '{{ letsencrypt_cert_path }}/privkey.pem', destination: '{{ neo4j_ssl_basedir }}/bolt/private.key', mode: '0400' }
    - { source: '{{ letsencrypt_cert_path }}/fullchain.pem', destination: '{{ neo4j_ssl_basedir }}/bolt/trusted/public.crt', mode: '0644' }
