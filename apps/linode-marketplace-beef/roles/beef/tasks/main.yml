---
# Nginx
- name: install nginx
  apt:
    pkg: nginx
    state: present

- name: config file setup
  template:
      src: templates/nginx.conf.j2
      dest: "/etc/nginx/sites-available/{{ _domain }}"  

- name: create a symbolic link for the nginx configuration
  file:
    src: "/etc/nginx/sites-available/{{ _domain }}"
    dest: "/etc/nginx/sites-enabled/{{ _domain }}"
    state: link

- name: unlink the default nginx configuration
  file:
    path: "/etc/nginx/sites-enabled/default"
    state: absent
  notify: reload nginx service

# ssl_certbot
- name: setting up ssl certificate
  import_role:
    name: certbot_ssl

# beef setup    

- name: create beef group
  ansible.builtin.group:
    name: beef
    state: present

- name: create beef user
  ansible.builtin.user:
    name: beef
    shell: /sbin/nologin
    groups: beef
    system: true
    create_home: false

- name: clone beef repo
  ansible.builtin.git:
    repo: https://github.com/beefproject/beef.git
    dest: /home/beef

- name: changing beef dir owner
  ansible.builtin.file:
    path: /home/beef
    owner: beef
    group: beef
    recurse: true

- name: copying lets encrypt certs to beef dir
  ansible.builtin.copy:
    src: "{{ item.src }}" 
    dest: "{{ item.dest }}"
  loop:
    - src: /etc/letsencrypt/live/{{ _domain }}/privkey.pem
      dest: /home/beef
    - src: /etc/letsencrypt/live/{{ _domain }}/fullchain.pem
      dest: /home/beef

- name: adding config file
  template: 
    src: beef_config.yaml.j2
    dest: /home/beef/config.yaml

- name: install local beef
  command: ./install
  args:
    stdin: "yes\n"

- name: adding startup script
  template:
    src: beef_startup.j2
    dest: "/home/beef/beef_startup"
    mode: a+x

- name: adding service file
  template:
    src: beef_service.j2
    dest: "/etc/systemd/system/beef.service"

- name: reload systemd daemon
  systemd:
    daemon_reload: yes

- name: install xmlrpc gem
  community.general.gem:
    name: xmlrpc
    version: latest
    state: present

- name: install beef
  command: ./install
  args:
    stdin: "yes\n"

- name: start beef service
  systemd:
    name: beef.service
    state: started
    enabled: yes    

- name: adding ssl renew script
  template:
    src: ssl_cron_renew.bash.j2
    dest: "/root/certbot-beef-renewal.sh"
    mode: a+x

- name: backup existing crontab
  command: crontab -l > /tmp/cron_backup
  args:
    creates: /tmp/cron_backup 

- name: Add new cron job
  cron:
    name: "certbot beef renewal"
    minute: "*"
    hour: "1"
    weekday: "1"
    job: "bash /root/certbot-beef-renewal.sh"

- name: remove temporary file
  file:
    path: /tmp/cron_backup
    state: absent

