---
# openlitespeed

- name: Download OpenLiteSpeed and Django setup scripts
  block:
    - name: Download scripts
      ansible.builtin.get_url:
        url: "{{ item.url }}"
        dest: "{{ item.dest }}"
        mode: '0755'
      loop:
        - { url: 'https://raw.githubusercontent.com/litespeedtech/ls-cloud-image/master/Setup/djangosetup.sh', dest: '/tmp/djangosetup.sh' }
        - { url: 'https://raw.githubusercontent.com/litespeedtech/ls-cloud-image/master/Cloud-init/per-instance.sh', dest: '/tmp/per-instance.sh' }
      loop_control:
        label: "{{ item.url }}"

- name: Execute OpenLiteSpeed and Django setup scripts
  ansible.builtin.command: bash "{{ item.dest }}"
  loop:
    - { dest: '/tmp/djangosetup.sh' }
    - { dest: '/tmp/per-instance.sh' }
  loop_control:
    label: "{{ item.dest }}"

- name: Slurp content of /root/.litespeed_password
  ansible.builtin.slurp:
    src: /root/.litespeed_password
  register: litespeed_encoded_password

- name: Decode base64 password and extract password
  set_fact:
    litespeed_decoded_password: "{{ (litespeed_encoded_password.content | b64decode).split('=')[1].strip() }}"

- name: Create Django superuser using django_manage module
  community.general.django_manage:
    command: "createsuperuser --noinput --username={{ django_superuser_username }} --email={{ django_superuser_email }}"
    project_path: "/usr/local/lsws/Example/html/demo"
  environment:
    DJANGO_SUPERUSER_PASSWORD: "{{ django_password }}"

# - name: Update domain setup script to accept _domain command line argument
#   ansible.builtin.lineinfile:
#     path: /opt/domainsetup.sh
#     regexp: "^DOMAIN=''$"
#     line: "DOMAIN=\\${1:-\\$DOMAIN}"

# - name: Run domain setup script
#   ansible.builtin.shell:
#     cmd: "/opt/domainsetup.sh {{ _domain }}"

- name: Run domain setup script
  ansible.builtin.expect:
    command: "/opt/domainsetup.sh"
    responses:
      Question:
      - "{{ _domain }}"
      - "y"
      - "y"
      - "{{ soa_email_address }}"
      - "y"
      - "y"
      - "y"