--- 
# install akamai datasource

- name: create grafana plugin directory
  file:
    path: '/var/lib/grafana/{{ item }}'
    owner: grafana
    group: grafana
    state: directory
    mode: 0755
  loop:
   - plugins
   - plugins/akamai-insights-datasource-plugin

- name: clone akamai datasource repo
  git:
    repo: 'https://github.com/akamai/akamai-insights-datasource.git'
    dest: '/tmp/akamai-insights-datasource'

- name: move datasource files to plugin directory
  copy:
    src: '/tmp/akamai-insights-datasource/dist/{{ item }}'
    dest: '/var/lib/grafana/plugins/akamai-insights-datasource-plugin/{{ item }}'
    owner: grafana
    group: grafana
  loop:
    - LICENSE
    - README.md 
    - module.js
    - plugin.json
    - gpx_akamai-insights-datasource-plugin_linux_amd64

- name: make datasource binary executable
  ansible.builtin.file:
    path: /var/lib/grafana/plugins/akamai-insights-datasource-plugin/gpx_akamai-insights-datasource-plugin_linux_amd64
    owner: grafana
    group: grafana
    mode: 0755

- name: move /img to plugin directory
  copy:
    src: '/tmp/akamai-insights-datasource/dist/img/'
    dest: '/var/lib/grafana/plugins/akamai-insights-datasource-plugin/img'
    owner: grafana
    group: grafana

- name: add unsigned pluging to grafana
  lineinfile:
    path: '/etc/grafana/grafana.ini'
    regex: '{{ item.regex }}'
    line: '{{ item.line }}'
  loop:
   - { regex: '^\;plugins = /var/lib/grafana/plugins', line: 'plugins = /var/lib/grafana/plugins' }
   - { regex: '^\;allow_loading_unsigned_plugins =', line: 'allow_loading_unsigned_plugins = akamai-insights-datasource' }

- name: restart grafana
  systemd: 
    name: grafana-server
    state: restarted

- name: create json payload file for datasource
  template:
    src: 'templates/datasource.json.j2'
    dest: '/tmp/datasource.json'

- name: add akamai datasource
  uri:
    url: 'http://localhost:3000/api/datasources'
    method: POST
    url_username: 'admin'
    url_password: '{{ grafana_password }}'
    force_basic_auth: true
    headers:
      Content-Type: application/json
    src: /tmp/datasource.json
  no_log: true

- name: clean up /tmp directory
  file:
    path: '/tmp/{{ item }}'
    state: absent
  loop:
    - akamai-insights-datasource
    - datasource.json