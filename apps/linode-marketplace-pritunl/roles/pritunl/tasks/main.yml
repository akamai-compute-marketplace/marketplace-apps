---
- name: Add MongoDB repository
  copy:
    dest: /etc/apt/sources.list.d/mongodb-org.list
    content: |
      deb [ signed-by=/usr/share/keyrings/mongodb-server-8.0.gpg ] https://repo.mongodb.org/apt/ubuntu noble/mongodb-org/8.0 multiverse

- name: Add OpenVPN repository
  copy:
    dest: /etc/apt/sources.list.d/openvpn.list
    content: |
      deb [ signed-by=/usr/share/keyrings/openvpn-repo.gpg ] https://build.openvpn.net/debian/openvpn/stable noble main

- name: Add Pritunl repository
  copy:
    dest: /etc/apt/sources.list.d/pritunl.list
    content: |
      deb [ signed-by=/usr/share/keyrings/pritunl.gpg ] https://repo.pritunl.com/stable/apt noble main

- name: install gnupg
  apt:
    name: gnupg
    state: present

- name: add mongodb gpg key
  get_url:
    url: https://www.mongodb.org/static/pgp/server-8.0.asc
    dest: /tmp/mongodb-server-8.0.asc

- name: decrypt and store mongodb gpg key
  shell: gpg --dearmor --yes -o /usr/share/keyrings/mongodb-server-8.0.gpg /tmp/mongodb-server-8.0.asc

- name: add openvpn gpg key
  get_url:
    url: https://swupdate.openvpn.net/repos/repo-public.gpg
    dest: /tmp/openvpn-repo.gpg

- name: decrypt and store openvpn gpg key
  shell: gpg --dearmor --yes -o /usr/share/keyrings/openvpn-repo.gpg /tmp/openvpn-repo.gpg

- name: add pritunl gpg key
  get_url:
    url: https://raw.githubusercontent.com/pritunl/pgp/master/pritunl_repo_pub.asc
    dest: /tmp/pritunl_repo_pub.asc

- name: decrypt and store pritunl gpg key
  shell: gpg --dearmor --yes -o /usr/share/keyrings/pritunl.gpg /tmp/pritunl_repo_pub.asc

- name: apt update
  apt:
    update_cache: yes

- name: install required packages
  apt:
    name:
      - pritunl
      - openvpn
      - mongodb-org
      - wireguard
      - wireguard-tools
      - nginx
    state: present

- name: update pritunl conf
  template:
      src: 'templates/pritunl.conf.j2'
      dest: '/etc/pritunl.conf'

- name: start and enable mongodb
  systemd:
    name: "{{ item }}"
    state: started
    enabled: yes
  with_items:
    - mongod
    - pritunls

- name: set ui port 8080
  shell: pritunl set app.server_port 8443

- name: set pritunl redirect equal to true
  shell: pritunl set app.redirect_server true

- name: get login creds
  shell: pritunl default-password
  register: pritunl_credentials

- name: config file setup
  template:
    src: templates/nginx.conf.j2
    dest: "/etc/nginx/sites-available/{{ _domain }}"    

- name: create a symbolic link for the nginx configuration
  file:
    src: "/etc/nginx/sites-available/{{ _domain }}"
    dest: "/etc/nginx/sites-enabled/{{ _domain }}"
    state: link

- name: unlink the default nginx configuration
  file:
    path: "/etc/nginx/sites-enabled/default"
    state: absent
  notify: reload nginx service
  
# ssl_certbot
- name: setting up ssl certificate
  import_role:
    name: certbot_ssl




